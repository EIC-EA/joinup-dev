<?php

/**
 * @file
 * Joinup EU Login install file.
 */

declare(strict_types = 1);

use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_install().
 */
function joinup_eulogin_install(): void {
  // Store EU Login schema data. We're using a fixture file, rather than parsing
  // data from https://ecas.ec.europa.eu/cas/schemas in order to avoid HTTP
  // dependencies in Continuous Integration flows. On production, the schema
  // data is refreshed from time to time based on a configurable interval.
  $file = \Drupal::configFactory()->get('joinup_eulogin.settings')->get('schema.fixture_file');
  $data = Yaml::decode(file_get_contents(__DIR__ . "/$file"));
  \Drupal::keyValue('joinup')->set('eulogin.schema', $data);
  $now = \Drupal::time()->getRequestTime();
  \Drupal::state()->set('joinup_eulogin.schema_data_updater.last_updated', $now);
}

/**
 * Implements hook_uninstall().
 */
function joinup_eulogin_uninstall(): void {
  \Drupal::keyValue('joinup')->delete('eulogin.schema');
}

/**
 * Implements hook_requirements().
 */
function joinup_eulogin_requirements(string $phase): array {
  $requirements = [];
  if ($phase !== 'runtime') {
    return $requirements;
  }

  $version = \Drupal::keyValue('joinup')->get('eulogin.schema')['version'];
  $file = \Drupal::configFactory()->get('joinup_eulogin.settings')->get('schema.fixture_file');
  $fixture_version = Yaml::decode(file_get_contents(__DIR__ . "/$file"))['version'];
  $requirements['eulogin.schema'] = [
    'title' => t('EU Login Schema'),
    'value' => t('%version', ['%version' => $version]),
  ];

  if ($version === $fixture_version) {
    $requirements['eulogin.schema']['severity'] = REQUIREMENT_INFO;
  }
  else {
    $requirements['eulogin.schema']['severity'] = REQUIREMENT_WARNING;
    $requirements['eulogin.schema']['description'] = t("The %file fixture file version is outdated (%fixture_version). It's recommended to update the fixture file to the latest version (%version).", [
      '%file' => $file,
      '%fixture_version' => $fixture_version,
      '%version' => $version,
    ]);
  }

  return $requirements;
}
