<?php

/**
 * @file
 * Joinup Statistics module main file.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Site\Settings;
use Drupal\meta_entity\Entity\MetaEntity;

/**
 * Implements hook_entity_insert().
 *
 * Ensure meta entities for new content entities configured to have attached
 * metadata.
 */
function joinup_stats_entity_insert(EntityInterface $entity): void {
  if ($entity instanceof ContentEntityInterface) {
    /** @var \Drupal\meta_entity\MetaEntityRepositoryInterface $repository */
    $repository = \Drupal::service('meta_entity.repository');
    foreach ($repository->getMetaEntityTypesForBundle($entity->getEntityTypeId(), $entity->bundle()) as $type) {
      $meta_entity = MetaEntity::loadOrCreate($type, $entity);
      if ($meta_entity->isNew()) {
        $meta_entity->save();
      }
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function joinup_stats_module_implements_alter(array &$implementations, $hook): void {
  if ($hook === 'cron') {
    // Use the custom hook_cron() implementation, provided by 'joinup_stats'
    // module, to trigger the Cached Computed Field cron tasks.
    // @see joinup_stats_cron()
    unset($implementations['cached_computed_field']);
  }
}

/**
 * Implements hook_cron().
 */
function joinup_stats_cron(): void {
  // By adding this line in settings.php and rebuilding the cache, the process
  // of cached computed fields can be suppressed:
  // @code
  // $settings['joinup.parse_cached_computed_field'] = FALSE;
  // @endcode
  if (Settings::get('joinup.parse_cached_computed_field', TRUE)) {
    cached_computed_field_cron();
  }
}
