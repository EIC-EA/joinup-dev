<?php

/**
 * @file
 * Contains hooks and functions for the eif module.
 */

declare(strict_types = 1);

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\block\BlockInterface;
use Drupal\eif\EifInterface;
use Drupal\eif\Plugin\views\argument\EifGroupArgument;
use Drupal\og\OgGroupAudienceHelperInterface;

/**
 * Implements hook_theme().
 */
function eif_theme(array $existing, string $type, string $theme, string $path): array {
  return [
    'eif_category_navigator' => [
      'variables' => [
        'all_link' => NULL,
        'category_links' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_views_plugins_argument_alter().
 */
function eif_views_plugins_argument_alter(array &$plugins) {
  // We don't want to apply a group contextual filter for eif_recommendation
  // view. The contextual filter is added only for validation. Swapping the
  // class to treat this exception.
  // @see joinup_group_views_data_alter()
  // @see \Drupal\joinup_group\Plugin\views\argument\SearchApiGroupArgument
  // @see \Drupal\eif\Plugin\views\argument\EifGroupArgument
  $plugins['search_api_group']['class'] = EifGroupArgument::class;
}

/**
 * Implements hook_block_access().
 *
 * Workaround for facets not properly narrowing down results.
 *
 * @see https://citnet.tech.ec.europa.eu/CITnet/jira/browse/ISAICP-6090
 */
function eif_block_access(BlockInterface $block, string $operation, AccountInterface $account): AccessResultInterface {
  $data = [
    'principle' => ['conceptual-model', 'interoperability-layer'],
    'conceptualmodel' => ['principle', 'interoperability-layer'],
    'interoperabilitylayer' => ['principle', 'conceptual-model'],
  ];

  if (!in_array($block->id(), array_keys($data))) {
    return AccessResult::neutral();
  }

  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() !== 'view.eif_recommendation.page') {
    return AccessResult::neutral();
  }

  if (!$filters = \Drupal::request()->get('f')) {
    return AccessResult::neutral();
  }

  foreach ($filters as $filter) {
    foreach ($data[$block->id()] as $needle) {
      if (strpos($filter, $needle . ':') === 0) {
        return AccessResult::forbidden();
      }
    }
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function eif_form_rdf_entity_solution_edit_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  $form['#validate'][] = 'eif_validate_eif_field_values';
}

/**
 * Validates EIF recommendations and categories.
 *
 * @param array $form
 *   The form API form render array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form API form state object.
 */
function eif_validate_eif_field_values(array $form, FormStateInterface $form_state): void {
  $eif_recommendation = $form_state->getValue('field_is_eif_recommendation');
  $eif_category = $form_state->getValue('field_is_eif_category');
  if (empty($eif_recommendation) && !empty($eif_category)) {
    $form_state->setErrorByName('field_is_eif_recommendation', t("You'll have to select an EIF recommendation prior selecting an EIF category."));
  }
  if (!empty($eif_recommendation) && empty($eif_category)) {
    $form_state->setErrorByName('field_is_eif_category', t("An EIF category is mandatory when at least one EIF recommendation has been selected."));
  }
}

/**
 * Implements hook_preprocess_HOOK() for OG navigation menu.
 *
 * On EIF Toolbox filtered Solutions pages (route 'eif.solutions') we still want
 * to highlight the left-menu 'Solution' link as being active because it acts as
 * parent of the main 'Solutions' custom page.
 */
function eif_preprocess_menu__og__navigation(array &$variables): void {
  if (\Drupal::routeMatch()->getRouteName() !== 'eif.solutions') {
    return;
  }

  $instances = \Drupal::entityTypeManager()->getStorage('ogmenu_instance')->loadByProperties([
    'type' => 'navigation',
    OgGroupAudienceHelperInterface::DEFAULT_FIELD => EifInterface::EIF_ID,
  ]);
  $instance = reset($instances);

  $menu_link_content_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');
  $mids = $menu_link_content_storage->getQuery()
    ->condition('bundle', 'menu_link_content')
    ->condition('menu_name', "ogmenu-{$instance->id()}")
    ->condition('link.uri', 'entity:node/' . EifInterface::EIF_SOLUTIONS_NID)
    ->execute();

  if (!$mids) {
    throw new \Exception("There's no EIF Toolbox 'Solutions' left-menu link.");
  }

  $mid = reset($mids);
  $plugin_id = 'menu_link_content:' . $menu_link_content_storage->load($mid)->uuid();

  if (!isset($variables['items'][$plugin_id])) {
    throw new \Exception("Link '{$plugin_id}' not present in left-side menu.");
  }

  $variables['items'][$plugin_id]['in_active_trail'] = TRUE;
}
